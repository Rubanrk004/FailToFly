{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\017975\\\\Documents\\\\Dashboard\\\\frontend\\\\src\\\\PastResult.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PastResult = ({\n  email\n}) => {\n  _s();\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/quiz/results/${email}`).then(response => setResults(response.data)).catch(error => console.error('Error fetching quiz results:', error));\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Past Results for \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Topic: \", result.topic]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), result.responses.map((response, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question: \", response.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Answer: \", response.userAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct Answer: \", response.correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response.isCorrect ? \"Correct\" : \"Incorrect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(PastResult, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n_c = PastResult;\nexport default PastResult;\nvar _c;\n$RefreshReg$(_c, \"PastResult\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PastResult","email","_s","results","setResults","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","result","index","topic","responses","i","question","userAnswer","correctAnswer","isCorrect","_c","$RefreshReg$"],"sources":["C:/Users/017975/Documents/Dashboard/frontend/src/PastResult.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PastResult = ({ email }) => {\r\n    const [results, setResults] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/api/quiz/results/${email}`)\r\n            .then(response => setResults(response.data))\r\n            .catch(error => console.error('Error fetching quiz results:', error));\r\n    }, [email]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Past Results for {email}</h1>\r\n            {results.map((result, index) => (\r\n                <div key={index}>\r\n                    <h2>Topic: {result.topic}</h2>\r\n                    {result.responses.map((response, i) => (\r\n                        <div key={i}>\r\n                            <p>Question: {response.question}</p>\r\n                            <p>Your Answer: {response.userAnswer}</p>\r\n                            <p>Correct Answer: {response.correctAnswer}</p>\r\n                            <p>{response.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PastResult;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACQ,GAAG,CAAC,0CAA0CJ,KAAK,EAAE,CAAC,CACvDK,IAAI,CAACC,QAAQ,IAAIH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EAC7E,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,oBACIF,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,GAAI,mBAAiB,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAChCb,OAAO,CAACc,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACvBpB,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,GAAI,SAAO,EAACM,MAAM,CAACE,KAAK;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC7BE,MAAM,CAACG,SAAS,CAACJ,GAAG,CAAC,CAACV,QAAQ,EAAEe,CAAC,kBAC9BvB,OAAA;QAAAa,QAAA,gBACIb,OAAA;UAAAa,QAAA,GAAG,YAAU,EAACL,QAAQ,CAACgB,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCjB,OAAA;UAAAa,QAAA,GAAG,eAAa,EAACL,QAAQ,CAACiB,UAAU;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzCjB,OAAA;UAAAa,QAAA,GAAG,kBAAgB,EAACL,QAAQ,CAACkB,aAAa;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/CjB,OAAA;UAAAa,QAAA,EAAIL,QAAQ,CAACmB,SAAS,GAAG,SAAS,GAAG;QAAW;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJ/CM,CAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKN,CACR,CAAC;IAAA,GATIG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACd,EAAA,CA3BIF,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AA6BhB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}