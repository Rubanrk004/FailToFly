{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Quiz = () => {\n//     const [quizData, setQuizData] = useState([]);\n//     const [userResponses, setUserResponses] = useState({});\n//     const [answers, setAnswers] = useState(null);\n//     const [userInfo, setUserInfo] = useState({ name: '', email: '' });\n\n//     useEffect(() => {\n//         axios.get('http://localhost:5000/api/quiz')\n//             .then(response => setQuizData(response.data))\n//             .catch(error => console.error('Error fetching quiz data:', error));\n//     }, []);\n\n//     const handleChange = (e, questionId) => {\n//         setUserResponses({\n//             ...userResponses,\n//             [questionId]: e.target.value,\n//         });\n//     };\n\n//     const handleUserInfoChange = (e) => {\n//         const { name, value } = e.target;\n//         setUserInfo(prevState => ({ ...prevState, [name]: value }));\n//     };\n\n//     const handleSubmit = () => {\n//         const submissionData = {\n//             userInfo,\n//             responses: userResponses,\n//         };\n\n//         axios.post('http://localhost:5000/api/quiz/submit', submissionData)\n//             .then(response => setAnswers(response.data.answers))\n//             .catch(error => console.error('Error submitting quiz:', error));\n//     };\n\n//     return (\n//         <div>\n//             <h1>Quiz</h1>\n//             <input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 placeholder=\"Name\"\n//                 value={userInfo.name}\n//                 onChange={handleUserInfoChange}\n//             />\n//             <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"Email\"\n//                 value={userInfo.email}\n//                 onChange={handleUserInfoChange}\n//             />\n//             <div>\n//                 {quizData.map((question) => (\n//                     <div key={question.id}>\n//                         <p>{question.question}</p>\n//                         {question.options.map((option, index) => (\n//                             <div key={index}>\n//                                 <input\n//                                     type=\"radio\"\n//                                     id={`question-${question.id}-option-${index}`}\n//                                     name={`question-${question.id}`}\n//                                     value={option}\n//                                     onChange={(e) => handleChange(e, question.id)}\n//                                 />\n//                                 <label htmlFor={`question-${question.id}-option-${index}`}>{option}</label>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 ))}\n//             </div>\n//             <button onClick={handleSubmit}>Submit</button>\n//             {answers && (\n//                 <div>\n//                     <h2>Quiz Results</h2>\n//                     {answers.map((answer, index) => (\n//                         <div key={index}>\n//                             <p>Question: {answer.question}</p>\n//                             <p>Your Answer: {answer.userAnswer}</p>\n//                             <p>Correct Answer: {answer.correctAnswer}</p>\n//                             <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\n//                         </div>\n//                     ))}\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Quiz;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Quiz = () => {\n//     const [quizData, setQuizData] = useState([]);\n//     const [userResponses, setUserResponses] = useState({});\n//     const [answers, setAnswers] = useState(null);\n//     const [userInfo, setUserInfo] = useState({ name: '', email: '' });\n//     const [topic, setTopic] = useState('');\n\n//     useEffect(() => {\n//         if (topic) {\n//             axios.get(`http://localhost:5000/api/quiz?topic=${topic}`)\n//                 .then(response => setQuizData(response.data))\n//                 .catch(error => console.error('Error fetching quiz data:', error));\n//         }\n//     }, [topic]);\n\n//     const handleChange = (e, questionId) => {\n//         setUserResponses({\n//             ...userResponses,\n//             [questionId]: e.target.value,\n//         });\n//     };\n\n//     const handleUserInfoChange = (e) => {\n//         const { name, value } = e.target;\n//         setUserInfo(prevState => ({ ...prevState, [name]: value }));\n//     };\n\n//     const handleSubmit = () => {\n//         const submissionData = {\n//             userInfo,\n//             responses: userResponses,\n//         };\n\n//         axios.post('http://localhost:5000/api/quiz/submit', submissionData)\n//             .then(response => setAnswers(response.data.answers))\n//             .catch(error => console.error('Error submitting quiz:', error));\n//     };\n\n//     return (\n//         <div>\n//             <h1>Quiz</h1>\n//             <input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 placeholder=\"Name\"\n//                 value={userInfo.name}\n//                 onChange={handleUserInfoChange}\n//             />\n//             <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"Email\"\n//                 value={userInfo.email}\n//                 onChange={handleUserInfoChange}\n//             />\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Topic\"\n//                 value={topic}\n//                 onChange={e => setTopic(e.target.value)}\n//             />\n//             <div>\n//                 {quizData.map((quiz, quizIndex) => (\n//                     <div key={quizIndex}>\n//                         <h2>{quiz.topic}</h2>\n//                         {quiz.questions.map((question, questionIndex) => (\n//                             <div key={question.id}>\n//                                 <p>{question.question}</p>\n//                                 {question.options.map((option, optionIndex) => (\n//                                     <div key={optionIndex}>\n//                                         <input\n//                                             type=\"radio\"\n//                                             id={`question-${question.id}-option-${optionIndex}`}\n//                                             name={`question-${question.id}`}\n//                                             value={option}\n//                                             onChange={(e) => handleChange(e, question.id)}\n//                                         />\n//                                         <label htmlFor={`question-${question.id}-option-${optionIndex}`}>{option}</label>\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                         ))}\n//                     </div>\n//                 ))}\n//             </div>\n//             <button onClick={handleSubmit}>Submit</button>\n//             {answers && (\n//                 <div>\n//                     <h2>Quiz Results</h2>\n//                     {answers.map((answer, index) => (\n//                         <div key={index}>\n//                             <p>Question: {answer.question}</p>\n//                             <p>Your Answer: {answer.userAnswer}</p>\n//                             <p>Correct Answer: {answer.correctAnswer}</p>\n//                             <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\n//                         </div>\n//                     ))}\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Quiz;","map":{"version":3,"names":[],"sources":["C:/Users/017975/Documents/Dashboard/frontend/src/Quiz.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Quiz = () => {\r\n//     const [quizData, setQuizData] = useState([]);\r\n//     const [userResponses, setUserResponses] = useState({});\r\n//     const [answers, setAnswers] = useState(null);\r\n//     const [userInfo, setUserInfo] = useState({ name: '', email: '' });\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:5000/api/quiz')\r\n//             .then(response => setQuizData(response.data))\r\n//             .catch(error => console.error('Error fetching quiz data:', error));\r\n//     }, []);\r\n\r\n//     const handleChange = (e, questionId) => {\r\n//         setUserResponses({\r\n//             ...userResponses,\r\n//             [questionId]: e.target.value,\r\n//         });\r\n//     };\r\n\r\n//     const handleUserInfoChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setUserInfo(prevState => ({ ...prevState, [name]: value }));\r\n//     };\r\n\r\n//     const handleSubmit = () => {\r\n//         const submissionData = {\r\n//             userInfo,\r\n//             responses: userResponses,\r\n//         };\r\n\r\n//         axios.post('http://localhost:5000/api/quiz/submit', submissionData)\r\n//             .then(response => setAnswers(response.data.answers))\r\n//             .catch(error => console.error('Error submitting quiz:', error));\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Quiz</h1>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 placeholder=\"Name\"\r\n//                 value={userInfo.name}\r\n//                 onChange={handleUserInfoChange}\r\n//             />\r\n//             <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 placeholder=\"Email\"\r\n//                 value={userInfo.email}\r\n//                 onChange={handleUserInfoChange}\r\n//             />\r\n//             <div>\r\n//                 {quizData.map((question) => (\r\n//                     <div key={question.id}>\r\n//                         <p>{question.question}</p>\r\n//                         {question.options.map((option, index) => (\r\n//                             <div key={index}>\r\n//                                 <input\r\n//                                     type=\"radio\"\r\n//                                     id={`question-${question.id}-option-${index}`}\r\n//                                     name={`question-${question.id}`}\r\n//                                     value={option}\r\n//                                     onChange={(e) => handleChange(e, question.id)}\r\n//                                 />\r\n//                                 <label htmlFor={`question-${question.id}-option-${index}`}>{option}</label>\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//             <button onClick={handleSubmit}>Submit</button>\r\n//             {answers && (\r\n//                 <div>\r\n//                     <h2>Quiz Results</h2>\r\n//                     {answers.map((answer, index) => (\r\n//                         <div key={index}>\r\n//                             <p>Question: {answer.question}</p>\r\n//                             <p>Your Answer: {answer.userAnswer}</p>\r\n//                             <p>Correct Answer: {answer.correctAnswer}</p>\r\n//                             <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Quiz;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Quiz = () => {\r\n//     const [quizData, setQuizData] = useState([]);\r\n//     const [userResponses, setUserResponses] = useState({});\r\n//     const [answers, setAnswers] = useState(null);\r\n//     const [userInfo, setUserInfo] = useState({ name: '', email: '' });\r\n//     const [topic, setTopic] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         if (topic) {\r\n//             axios.get(`http://localhost:5000/api/quiz?topic=${topic}`)\r\n//                 .then(response => setQuizData(response.data))\r\n//                 .catch(error => console.error('Error fetching quiz data:', error));\r\n//         }\r\n//     }, [topic]);\r\n\r\n//     const handleChange = (e, questionId) => {\r\n//         setUserResponses({\r\n//             ...userResponses,\r\n//             [questionId]: e.target.value,\r\n//         });\r\n//     };\r\n\r\n//     const handleUserInfoChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setUserInfo(prevState => ({ ...prevState, [name]: value }));\r\n//     };\r\n\r\n//     const handleSubmit = () => {\r\n//         const submissionData = {\r\n//             userInfo,\r\n//             responses: userResponses,\r\n//         };\r\n\r\n//         axios.post('http://localhost:5000/api/quiz/submit', submissionData)\r\n//             .then(response => setAnswers(response.data.answers))\r\n//             .catch(error => console.error('Error submitting quiz:', error));\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Quiz</h1>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 placeholder=\"Name\"\r\n//                 value={userInfo.name}\r\n//                 onChange={handleUserInfoChange}\r\n//             />\r\n//             <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 placeholder=\"Email\"\r\n//                 value={userInfo.email}\r\n//                 onChange={handleUserInfoChange}\r\n//             />\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Topic\"\r\n//                 value={topic}\r\n//                 onChange={e => setTopic(e.target.value)}\r\n//             />\r\n//             <div>\r\n//                 {quizData.map((quiz, quizIndex) => (\r\n//                     <div key={quizIndex}>\r\n//                         <h2>{quiz.topic}</h2>\r\n//                         {quiz.questions.map((question, questionIndex) => (\r\n//                             <div key={question.id}>\r\n//                                 <p>{question.question}</p>\r\n//                                 {question.options.map((option, optionIndex) => (\r\n//                                     <div key={optionIndex}>\r\n//                                         <input\r\n//                                             type=\"radio\"\r\n//                                             id={`question-${question.id}-option-${optionIndex}`}\r\n//                                             name={`question-${question.id}`}\r\n//                                             value={option}\r\n//                                             onChange={(e) => handleChange(e, question.id)}\r\n//                                         />\r\n//                                         <label htmlFor={`question-${question.id}-option-${optionIndex}`}>{option}</label>\r\n//                                     </div>\r\n//                                 ))}\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//             <button onClick={handleSubmit}>Submit</button>\r\n//             {answers && (\r\n//                 <div>\r\n//                     <h2>Quiz Results</h2>\r\n//                     {answers.map((answer, index) => (\r\n//                         <div key={index}>\r\n//                             <p>Question: {answer.question}</p>\r\n//                             <p>Your Answer: {answer.userAnswer}</p>\r\n//                             <p>Correct Answer: {answer.correctAnswer}</p>\r\n//                             <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Quiz;\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}