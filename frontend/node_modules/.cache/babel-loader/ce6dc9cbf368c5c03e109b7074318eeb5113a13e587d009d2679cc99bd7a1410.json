{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\017975\\\\Documents\\\\Dashboard\\\\frontend\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Quiz = () => {\n//     const [quizData, setQuizData] = useState([]);\n//     const [userResponses, setUserResponses] = useState({});\n//     const [answers, setAnswers] = useState(null);\n//     const [userInfo, setUserInfo] = useState({ name: '', email: '' });\n\n//     useEffect(() => {\n//         axios.get('http://localhost:5000/api/quiz')\n//             .then(response => setQuizData(response.data))\n//             .catch(error => console.error('Error fetching quiz data:', error));\n//     }, []);\n\n//     const handleChange = (e, questionId) => {\n//         setUserResponses({\n//             ...userResponses,\n//             [questionId]: e.target.value,\n//         });\n//     };\n\n//     const handleUserInfoChange = (e) => {\n//         const { name, value } = e.target;\n//         setUserInfo(prevState => ({ ...prevState, [name]: value }));\n//     };\n\n//     const handleSubmit = () => {\n//         const submissionData = {\n//             userInfo,\n//             responses: userResponses,\n//         };\n\n//         axios.post('http://localhost:5000/api/quiz/submit', submissionData)\n//             .then(response => setAnswers(response.data.answers))\n//             .catch(error => console.error('Error submitting quiz:', error));\n//     };\n\n//     return (\n//         <div>\n//             <h1>Quiz</h1>\n//             <input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 placeholder=\"Name\"\n//                 value={userInfo.name}\n//                 onChange={handleUserInfoChange}\n//             />\n//             <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"Email\"\n//                 value={userInfo.email}\n//                 onChange={handleUserInfoChange}\n//             />\n//             <div>\n//                 {quizData.map((question) => (\n//                     <div key={question.id}>\n//                         <p>{question.question}</p>\n//                         {question.options.map((option, index) => (\n//                             <div key={index}>\n//                                 <input\n//                                     type=\"radio\"\n//                                     id={`question-${question.id}-option-${index}`}\n//                                     name={`question-${question.id}`}\n//                                     value={option}\n//                                     onChange={(e) => handleChange(e, question.id)}\n//                                 />\n//                                 <label htmlFor={`question-${question.id}-option-${index}`}>{option}</label>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 ))}\n//             </div>\n//             <button onClick={handleSubmit}>Submit</button>\n//             {answers && (\n//                 <div>\n//                     <h2>Quiz Results</h2>\n//                     {answers.map((answer, index) => (\n//                         <div key={index}>\n//                             <p>Question: {answer.question}</p>\n//                             <p>Your Answer: {answer.userAnswer}</p>\n//                             <p>Correct Answer: {answer.correctAnswer}</p>\n//                             <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\n//                         </div>\n//                     ))}\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Quiz;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Quiz = () => {\n//     const [quizData, setQuizData] = useState([]);\n//     const [userResponses, setUserResponses] = useState({});\n//     const [answers, setAnswers] = useState(null);\n//     const [userInfo, setUserInfo] = useState({ name: '', email: '' });\n//     const [topic, setTopic] = useState('');\n\n//     useEffect(() => {\n//         if (topic) {\n//             axios.get(`http://localhost:5000/api/quiz?topic=${topic}`)\n//                 .then(response => setQuizData(response.data))\n//                 .catch(error => console.error('Error fetching quiz data:', error));\n//         }\n//     }, [topic]);\n\n//     const handleChange = (e, questionId) => {\n//         setUserResponses({\n//             ...userResponses,\n//             [questionId]: e.target.value,\n//         });\n//     };\n\n//     const handleUserInfoChange = (e) => {\n//         const { name, value } = e.target;\n//         setUserInfo(prevState => ({ ...prevState, [name]: value }));\n//     };\n\n//     const handleSubmit = () => {\n//         const submissionData = {\n//             userInfo,\n//             responses: userResponses,\n//         };\n\n//         axios.post('http://localhost:5000/api/quiz/submit', submissionData)\n//             .then(response => setAnswers(response.data.answers))\n//             .catch(error => console.error('Error submitting quiz:', error));\n//     };\n\n//     return (\n//         <div>\n//             <h1>Quiz</h1>\n//             <input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 placeholder=\"Name\"\n//                 value={userInfo.name}\n//                 onChange={handleUserInfoChange}\n//             />\n//             <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"Email\"\n//                 value={userInfo.email}\n//                 onChange={handleUserInfoChange}\n//             />\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Topic\"\n//                 value={topic}\n//                 onChange={e => setTopic(e.target.value)}\n//             />\n//             <div>\n//                 {quizData.map((quiz, quizIndex) => (\n//                     <div key={quizIndex}>\n//                         <h2>{quiz.topic}</h2>\n//                         {quiz.questions.map((question, questionIndex) => (\n//                             <div key={question.id}>\n//                                 <p>{question.question}</p>\n//                                 {question.options.map((option, optionIndex) => (\n//                                     <div key={optionIndex}>\n//                                         <input\n//                                             type=\"radio\"\n//                                             id={`question-${question.id}-option-${optionIndex}`}\n//                                             name={`question-${question.id}`}\n//                                             value={option}\n//                                             onChange={(e) => handleChange(e, question.id)}\n//                                         />\n//                                         <label htmlFor={`question-${question.id}-option-${optionIndex}`}>{option}</label>\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                         ))}\n//                     </div>\n//                 ))}\n//             </div>\n//             <button onClick={handleSubmit}>Submit</button>\n//             {answers && (\n//                 <div>\n//                     <h2>Quiz Results</h2>\n//                     {answers.map((answer, index) => (\n//                         <div key={index}>\n//                             <p>Question: {answer.question}</p>\n//                             <p>Your Answer: {answer.userAnswer}</p>\n//                             <p>Correct Answer: {answer.correctAnswer}</p>\n//                             <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\n//                         </div>\n//                     ))}\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Quiz;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [userResponses, setUserResponses] = useState({});\n  const [answers, setAnswers] = useState(null);\n  const [userInfo, setUserInfo] = useState({\n    name: '',\n    email: ''\n  });\n  const [topic, setTopic] = useState('');\n  const [userQuizResults, setUserQuizResults] = useState([]);\n  useEffect(() => {\n    if (topic) {\n      axios.get(`http://localhost:5000/api/quiz?topic=${topic}`).then(response => setQuizData(response.data)).catch(error => console.error('Error fetching quiz data:', error));\n    }\n  }, [topic]);\n  const handleChange = (e, questionId) => {\n    setUserResponses({\n      ...userResponses,\n      [questionId]: e.target.value\n    });\n  };\n  const handleUserInfoChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserInfo(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = () => {\n    const submissionData = {\n      userInfo,\n      responses: userResponses\n    };\n    axios.post('http://localhost:5000/api/quiz/submit', submissionData).then(response => setAnswers(response.data.answers)).then(() => fetchUserQuizResults(userInfo.email)) // Fetch user quiz results after submission\n    .catch(error => console.error('Error submitting quiz:', error));\n  };\n  const fetchUserQuizResults = email => {\n    axios.get(`http://localhost:5000/api/user/${email}/quiz-results`).then(response => setUserQuizResults(response.data.quizResults)).catch(error => console.error('Error fetching quiz results:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      value: userInfo.name,\n      onChange: handleUserInfoChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: userInfo.email,\n      onChange: handleUserInfoChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Topic\",\n      value: topic,\n      onChange: e => setTopic(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: quizData.map((quiz, quizIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: quiz.topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this), quiz.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 33\n          }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `question-${question.id}-option-${optionIndex}`,\n              name: `question-${question.id}`,\n              value: option,\n              onChange: e => handleChange(e, question.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `question-${question.id}-option-${optionIndex}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 41\n            }, this)]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 37\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 29\n        }, this))]\n      }, quizIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), answers && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }, this), answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question: \", answer.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Answer: \", answer.userAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct Answer: \", answer.correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: answer.isCorrect ? \"Correct\" : \"Incorrect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }, this), userQuizResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Previous Quiz Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }, this), userQuizResults.map((result, resultIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: result.topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 29\n        }, this), result.answers.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question: \", answer.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your Answer: \", answer.userAnswer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Correct Answer: \", answer.correctAnswer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answer.isCorrect ? \"Correct\" : \"Incorrect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 37\n          }, this)]\n        }, answerIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 33\n        }, this))]\n      }, resultIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"f8qr4ngj74SEAG1hMHuUiH6ZDx0=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Quiz","_s","quizData","setQuizData","userResponses","setUserResponses","answers","setAnswers","userInfo","setUserInfo","name","email","topic","setTopic","userQuizResults","setUserQuizResults","get","then","response","data","catch","error","console","handleChange","e","questionId","target","value","handleUserInfoChange","prevState","handleSubmit","submissionData","responses","post","fetchUserQuizResults","quizResults","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","quiz","quizIndex","questions","question","questionIndex","options","option","optionIndex","id","htmlFor","onClick","answer","index","userAnswer","correctAnswer","isCorrect","length","result","resultIndex","answerIndex","_c","$RefreshReg$"],"sources":["C:/Users/017975/Documents/Dashboard/frontend/src/Quiz.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Quiz = () => {\r\n//     const [quizData, setQuizData] = useState([]);\r\n//     const [userResponses, setUserResponses] = useState({});\r\n//     const [answers, setAnswers] = useState(null);\r\n//     const [userInfo, setUserInfo] = useState({ name: '', email: '' });\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:5000/api/quiz')\r\n//             .then(response => setQuizData(response.data))\r\n//             .catch(error => console.error('Error fetching quiz data:', error));\r\n//     }, []);\r\n\r\n//     const handleChange = (e, questionId) => {\r\n//         setUserResponses({\r\n//             ...userResponses,\r\n//             [questionId]: e.target.value,\r\n//         });\r\n//     };\r\n\r\n//     const handleUserInfoChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setUserInfo(prevState => ({ ...prevState, [name]: value }));\r\n//     };\r\n\r\n//     const handleSubmit = () => {\r\n//         const submissionData = {\r\n//             userInfo,\r\n//             responses: userResponses,\r\n//         };\r\n\r\n//         axios.post('http://localhost:5000/api/quiz/submit', submissionData)\r\n//             .then(response => setAnswers(response.data.answers))\r\n//             .catch(error => console.error('Error submitting quiz:', error));\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Quiz</h1>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 placeholder=\"Name\"\r\n//                 value={userInfo.name}\r\n//                 onChange={handleUserInfoChange}\r\n//             />\r\n//             <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 placeholder=\"Email\"\r\n//                 value={userInfo.email}\r\n//                 onChange={handleUserInfoChange}\r\n//             />\r\n//             <div>\r\n//                 {quizData.map((question) => (\r\n//                     <div key={question.id}>\r\n//                         <p>{question.question}</p>\r\n//                         {question.options.map((option, index) => (\r\n//                             <div key={index}>\r\n//                                 <input\r\n//                                     type=\"radio\"\r\n//                                     id={`question-${question.id}-option-${index}`}\r\n//                                     name={`question-${question.id}`}\r\n//                                     value={option}\r\n//                                     onChange={(e) => handleChange(e, question.id)}\r\n//                                 />\r\n//                                 <label htmlFor={`question-${question.id}-option-${index}`}>{option}</label>\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//             <button onClick={handleSubmit}>Submit</button>\r\n//             {answers && (\r\n//                 <div>\r\n//                     <h2>Quiz Results</h2>\r\n//                     {answers.map((answer, index) => (\r\n//                         <div key={index}>\r\n//                             <p>Question: {answer.question}</p>\r\n//                             <p>Your Answer: {answer.userAnswer}</p>\r\n//                             <p>Correct Answer: {answer.correctAnswer}</p>\r\n//                             <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Quiz;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Quiz = () => {\r\n//     const [quizData, setQuizData] = useState([]);\r\n//     const [userResponses, setUserResponses] = useState({});\r\n//     const [answers, setAnswers] = useState(null);\r\n//     const [userInfo, setUserInfo] = useState({ name: '', email: '' });\r\n//     const [topic, setTopic] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         if (topic) {\r\n//             axios.get(`http://localhost:5000/api/quiz?topic=${topic}`)\r\n//                 .then(response => setQuizData(response.data))\r\n//                 .catch(error => console.error('Error fetching quiz data:', error));\r\n//         }\r\n//     }, [topic]);\r\n\r\n//     const handleChange = (e, questionId) => {\r\n//         setUserResponses({\r\n//             ...userResponses,\r\n//             [questionId]: e.target.value,\r\n//         });\r\n//     };\r\n\r\n//     const handleUserInfoChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setUserInfo(prevState => ({ ...prevState, [name]: value }));\r\n//     };\r\n\r\n//     const handleSubmit = () => {\r\n//         const submissionData = {\r\n//             userInfo,\r\n//             responses: userResponses,\r\n//         };\r\n\r\n//         axios.post('http://localhost:5000/api/quiz/submit', submissionData)\r\n//             .then(response => setAnswers(response.data.answers))\r\n//             .catch(error => console.error('Error submitting quiz:', error));\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Quiz</h1>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 placeholder=\"Name\"\r\n//                 value={userInfo.name}\r\n//                 onChange={handleUserInfoChange}\r\n//             />\r\n//             <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 placeholder=\"Email\"\r\n//                 value={userInfo.email}\r\n//                 onChange={handleUserInfoChange}\r\n//             />\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Topic\"\r\n//                 value={topic}\r\n//                 onChange={e => setTopic(e.target.value)}\r\n//             />\r\n//             <div>\r\n//                 {quizData.map((quiz, quizIndex) => (\r\n//                     <div key={quizIndex}>\r\n//                         <h2>{quiz.topic}</h2>\r\n//                         {quiz.questions.map((question, questionIndex) => (\r\n//                             <div key={question.id}>\r\n//                                 <p>{question.question}</p>\r\n//                                 {question.options.map((option, optionIndex) => (\r\n//                                     <div key={optionIndex}>\r\n//                                         <input\r\n//                                             type=\"radio\"\r\n//                                             id={`question-${question.id}-option-${optionIndex}`}\r\n//                                             name={`question-${question.id}`}\r\n//                                             value={option}\r\n//                                             onChange={(e) => handleChange(e, question.id)}\r\n//                                         />\r\n//                                         <label htmlFor={`question-${question.id}-option-${optionIndex}`}>{option}</label>\r\n//                                     </div>\r\n//                                 ))}\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//             <button onClick={handleSubmit}>Submit</button>\r\n//             {answers && (\r\n//                 <div>\r\n//                     <h2>Quiz Results</h2>\r\n//                     {answers.map((answer, index) => (\r\n//                         <div key={index}>\r\n//                             <p>Question: {answer.question}</p>\r\n//                             <p>Your Answer: {answer.userAnswer}</p>\r\n//                             <p>Correct Answer: {answer.correctAnswer}</p>\r\n//                             <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Quiz;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Quiz = () => {\r\n    const [quizData, setQuizData] = useState([]);\r\n    const [userResponses, setUserResponses] = useState({});\r\n    const [answers, setAnswers] = useState(null);\r\n    const [userInfo, setUserInfo] = useState({ name: '', email: '' });\r\n    const [topic, setTopic] = useState('');\r\n    const [userQuizResults, setUserQuizResults] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (topic) {\r\n            axios.get(`http://localhost:5000/api/quiz?topic=${topic}`)\r\n                .then(response => setQuizData(response.data))\r\n                .catch(error => console.error('Error fetching quiz data:', error));\r\n        }\r\n    }, [topic]);\r\n\r\n    const handleChange = (e, questionId) => {\r\n        setUserResponses({\r\n            ...userResponses,\r\n            [questionId]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleUserInfoChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserInfo(prevState => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const submissionData = {\r\n            userInfo,\r\n            responses: userResponses,\r\n        };\r\n\r\n        axios.post('http://localhost:5000/api/quiz/submit', submissionData)\r\n            .then(response => setAnswers(response.data.answers))\r\n            .then(() => fetchUserQuizResults(userInfo.email)) // Fetch user quiz results after submission\r\n            .catch(error => console.error('Error submitting quiz:', error));\r\n    };\r\n\r\n    const fetchUserQuizResults = (email) => {\r\n        axios.get(`http://localhost:5000/api/user/${email}/quiz-results`)\r\n            .then(response => setUserQuizResults(response.data.quizResults))\r\n            .catch(error => console.error('Error fetching quiz results:', error));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quiz</h1>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                value={userInfo.name}\r\n                onChange={handleUserInfoChange}\r\n            />\r\n            <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                value={userInfo.email}\r\n                onChange={handleUserInfoChange}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Topic\"\r\n                value={topic}\r\n                onChange={e => setTopic(e.target.value)}\r\n            />\r\n            <div>\r\n                {quizData.map((quiz, quizIndex) => (\r\n                    <div key={quizIndex}>\r\n                        <h2>{quiz.topic}</h2>\r\n                        {quiz.questions.map((question, questionIndex) => (\r\n                            <div key={question.id}>\r\n                                <p>{question.question}</p>\r\n                                {question.options.map((option, optionIndex) => (\r\n                                    <div key={optionIndex}>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            id={`question-${question.id}-option-${optionIndex}`}\r\n                                            name={`question-${question.id}`}\r\n                                            value={option}\r\n                                            onChange={(e) => handleChange(e, question.id)}\r\n                                        />\r\n                                        <label htmlFor={`question-${question.id}-option-${optionIndex}`}>{option}</label>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            {answers && (\r\n                <div>\r\n                    <h2>Quiz Results</h2>\r\n                    {answers.map((answer, index) => (\r\n                        <div key={index}>\r\n                            <p>Question: {answer.question}</p>\r\n                            <p>Your Answer: {answer.userAnswer}</p>\r\n                            <p>Correct Answer: {answer.correctAnswer}</p>\r\n                            <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            {userQuizResults.length > 0 && (\r\n                <div>\r\n                    <h2>Your Previous Quiz Results</h2>\r\n                    {userQuizResults.map((result, resultIndex) => (\r\n                        <div key={resultIndex}>\r\n                            <h3>{result.topic}</h3>\r\n                            {result.answers.map((answer, answerIndex) => (\r\n                                <div key={answerIndex}>\r\n                                    <p>Question: {answer.question}</p>\r\n                                    <p>Your Answer: {answer.userAnswer}</p>\r\n                                    <p>Correct Answer: {answer.correctAnswer}</p>\r\n                                    <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}