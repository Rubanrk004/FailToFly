{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\017975\\\\Documents\\\\Dashboard\\\\frontend\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [userResponses, setUserResponses] = useState({});\n  const [answers, setAnswers] = useState(null);\n  const [userInfo, setUserInfo] = useState({\n    name: '',\n    email: ''\n  });\n  const [topic, setTopic] = useState('');\n  const [allAnswered, setAllAnswered] = useState(false);\n  useEffect(() => {\n    if (topic) {\n      axios.get(`http://localhost:5000/api/quiz?topic=${topic}`).then(response => setQuizData(response.data)).catch(error => console.error('Error fetching quiz data:', error));\n    }\n  }, [topic]);\n  useEffect(() => {\n    const allQuestionsAnswered = () => {\n      if (quizData.length === 0) return false;\n      return quizData.every(quiz => quiz.questions.every(question => userResponses.hasOwnProperty(question.id)));\n    };\n    setAllAnswered(allQuestionsAnswered());\n  }, [quizData, userResponses]);\n  const handleChange = (e, questionId) => {\n    setUserResponses({\n      ...userResponses,\n      [questionId]: e.target.value\n    });\n  };\n  const handleUserInfoChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserInfo(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = () => {\n    const submissionData = {\n      userInfo,\n      responses: userResponses\n    };\n    axios.post('http://localhost:5000/api/quiz/submit', submissionData).then(response => setAnswers(response.data.answers)).catch(error => console.error('Error submitting quiz:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      value: userInfo.name,\n      onChange: handleUserInfoChange,\n      autoComplete: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: userInfo.email,\n      onChange: handleUserInfoChange,\n      autoComplete: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Topic\",\n      value: topic,\n      onChange: e => setTopic(e.target.value),\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: quizData.map(quiz => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: quiz.topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), quiz.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `question-${question.id}-option-${index}`,\n              name: `question-${question.id}`,\n              value: option,\n              onChange: e => handleChange(e, question.id),\n              checked: userResponses[question.id] === option,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `question-${question.id}-option-${index}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 41\n            }, this)]\n          }, `${question.id}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this))]\n      }, quiz._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: !allAnswered,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), answers && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question: \", answer.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Answer: \", answer.userAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct Answer: \", answer.correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: answer.isCorrect ? \"Correct\" : \"Incorrect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"K40JdQ5StbW3jQD9J+hMJVheWNo=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Quiz","_s","quizData","setQuizData","userResponses","setUserResponses","answers","setAnswers","userInfo","setUserInfo","name","email","topic","setTopic","allAnswered","setAllAnswered","get","then","response","data","catch","error","console","allQuestionsAnswered","length","every","quiz","questions","question","hasOwnProperty","id","handleChange","e","questionId","target","value","handleUserInfoChange","prevState","handleSubmit","submissionData","responses","post","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","autoComplete","map","options","option","index","checked","htmlFor","_id","onClick","disabled","answer","userAnswer","correctAnswer","isCorrect","_c","$RefreshReg$"],"sources":["C:/Users/017975/Documents/Dashboard/frontend/src/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Quiz = () => {\r\n    const [quizData, setQuizData] = useState([]);\r\n    const [userResponses, setUserResponses] = useState({});\r\n    const [answers, setAnswers] = useState(null);\r\n    const [userInfo, setUserInfo] = useState({ name: '', email: '' });\r\n    const [topic, setTopic] = useState('');\r\n    const [allAnswered, setAllAnswered] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (topic) {\r\n            axios.get(`http://localhost:5000/api/quiz?topic=${topic}`)\r\n                .then(response => setQuizData(response.data))\r\n                .catch(error => console.error('Error fetching quiz data:', error));\r\n        }\r\n    }, [topic]);\r\n\r\n    useEffect(() => {\r\n        const allQuestionsAnswered = () => {\r\n            if (quizData.length === 0) return false;\r\n            return quizData.every(quiz =>\r\n                quiz.questions.every(question =>\r\n                    userResponses.hasOwnProperty(question.id)\r\n                )\r\n            );\r\n        };\r\n\r\n        setAllAnswered(allQuestionsAnswered());\r\n    }, [quizData, userResponses]);\r\n\r\n    const handleChange = (e, questionId) => {\r\n        setUserResponses({\r\n            ...userResponses,\r\n            [questionId]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleUserInfoChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserInfo(prevState => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const submissionData = {\r\n            userInfo,\r\n            responses: userResponses,\r\n        };\r\n\r\n        axios.post('http://localhost:5000/api/quiz/submit', submissionData)\r\n            .then(response => setAnswers(response.data.answers))\r\n            .catch(error => console.error('Error submitting quiz:', error));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quiz</h1>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                value={userInfo.name}\r\n                onChange={handleUserInfoChange}\r\n                autoComplete=\"name\"\r\n            />\r\n            <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                value={userInfo.email}\r\n                onChange={handleUserInfoChange}\r\n                autoComplete=\"email\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Topic\"\r\n                value={topic}\r\n                onChange={e => setTopic(e.target.value)}\r\n                autoComplete=\"off\"\r\n            />\r\n            <div>\r\n                {quizData.map((quiz) => (\r\n                    <div key={quiz._id}> {/* Use unique quiz ID */}\r\n                        <h2>{quiz.topic}</h2>\r\n                        {quiz.questions.map((question) => (\r\n                            <div key={question.id}>\r\n                                <p>{question.question}</p>\r\n                                {question.options.map((option, index) => (\r\n                                    <div key={`${question.id}-${index}`}> {/* Unique key for options */}\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            id={`question-${question.id}-option-${index}`}\r\n                                            name={`question-${question.id}`}\r\n                                            value={option}\r\n                                            onChange={(e) => handleChange(e, question.id)}\r\n                                            checked={userResponses[question.id] === option}\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                        <label htmlFor={`question-${question.id}-option-${index}`}>{option}</label>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <button onClick={handleSubmit} disabled={!allAnswered}>Submit</button>\r\n            {answers && (\r\n                <div>\r\n                    <h2>Quiz Results</h2>\r\n                    {answers.map((answer, index) => (\r\n                        <div key={index}>\r\n                            <p>Question: {answer.question}</p>\r\n                            <p>Your Answer: {answer.userAnswer}</p>\r\n                            <p>Correct Answer: {answer.correctAnswer}</p>\r\n                            <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}