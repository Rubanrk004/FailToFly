{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\017975\\\\Documents\\\\Dashboard\\\\frontend\\\\src\\\\pages\\\\VerbalQuestions.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerbalQuestions = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gradient-to-r from-green-400 to-blue-500/40\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Verbal Ability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border border-gray-300 rounded-lg shadow-md bg-white bg-gradient-to-r from-green-400 to-blue-500/40\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Question 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Complete the analogy: Book is to Reading as Fork is to ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-4 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The answer is Eating. A book is used for reading, and a fork is used for eating.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border border-white-300 rounded-lg shadow-md bg-white bg-gradient-to-r from-green-400 to-blue-500/40\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Question 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"What is the synonym of \\\"Abundant\\\"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-4 border-t border-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The synonym of \\\"Abundant\\\" is \\\"Plentiful\\\". Both words describe a large quantity or amount of something.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = VerbalQuestions;\nexport default VerbalQuestions;\nvar _c;\n$RefreshReg$(_c, \"VerbalQuestions\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","VerbalQuestions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/017975/Documents/Dashboard/frontend/src/pages/VerbalQuestions.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst VerbalQuestions = () => {\r\n  return (\r\n    <div className=\"p-6 bg-gradient-to-r from-green-400 to-blue-500/40\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Verbal Ability</h1>\r\n      <div className=\"space-y-4\">\r\n        <div className=\"p-4 border border-gray-300 rounded-lg shadow-md bg-white bg-gradient-to-r from-green-400 to-blue-500/40\">\r\n          <h2 className=\"text-xl font-semibold mb-2\">Question 1</h2>\r\n          <p>Complete the analogy: Book is to Reading as Fork is to ?</p>\r\n          <div className=\"mt-4 p-4 border-t border-gray-200\">\r\n            <h3 className=\"text-lg font-semibold\">Answer:</h3>\r\n            <p>\r\n              The answer is Eating. A book is used for reading, and a fork is used for eating.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"p-4 border border-white-300 rounded-lg shadow-md bg-white bg-gradient-to-r from-green-400 to-blue-500/40\">\r\n          <h2 className=\"text-xl font-semibold mb-2\">Question 2</h2>\r\n          <p>What is the synonym of \"Abundant\"?</p>\r\n          <div className=\"mt-4 p-4 border-t border-white\">\r\n            <h3 className=\"text-lg font-semibold\">Answer:</h3>\r\n            <p>\r\n              The synonym of \"Abundant\" is \"Plentiful\". Both words describe a large quantity or amount of something.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {/* Add more questions and answers as needed */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerbalQuestions;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,oBACED,OAAA;IAAKE,SAAS,EAAC,oDAAoD;IAAAC,QAAA,gBACjEH,OAAA;MAAIE,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3DP,OAAA;MAAKE,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBH,OAAA;QAAKE,SAAS,EAAC,yGAAyG;QAAAC,QAAA,gBACtHH,OAAA;UAAIE,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1DP,OAAA;UAAAG,QAAA,EAAG;QAAwD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC/DP,OAAA;UAAKE,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBAChDH,OAAA;YAAIE,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClDP,OAAA;YAAAG,QAAA,EAAG;UAEH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNP,OAAA;QAAKE,SAAS,EAAC,0GAA0G;QAAAC,QAAA,gBACvHH,OAAA;UAAIE,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1DP,OAAA;UAAAG,QAAA,EAAG;QAAkC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzCP,OAAA;UAAKE,SAAS,EAAC,gCAAgC;UAAAC,QAAA,gBAC7CH,OAAA;YAAIE,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClDP,OAAA;YAAAG,QAAA,EAAG;UAEH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GA7BIP,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}