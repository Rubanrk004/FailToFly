{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\017975\\\\Documents\\\\Dashboard\\\\frontend\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Quiz = () => {\n//     const [quizData, setQuizData] = useState([]);\n//     const [userResponses, setUserResponses] = useState({});\n//     const [answers, setAnswers] = useState(null);\n//     const [userInfo, setUserInfo] = useState({ name: '', email: '' });\n\n//     useEffect(() => {\n//         axios.get('http://localhost:5000/api/quiz')\n//             .then(response => setQuizData(response.data))\n//             .catch(error => console.error('Error fetching quiz data:', error));\n//     }, []);\n\n//     const handleChange = (e, questionId) => {\n//         setUserResponses({\n//             ...userResponses,\n//             [questionId]: e.target.value,\n//         });\n//     };\n\n//     const handleUserInfoChange = (e) => {\n//         const { name, value } = e.target;\n//         setUserInfo(prevState => ({ ...prevState, [name]: value }));\n//     };\n\n//     const handleSubmit = () => {\n//         const submissionData = {\n//             userInfo,\n//             responses: userResponses,\n//         };\n\n//         axios.post('http://localhost:5000/api/quiz/submit', submissionData)\n//             .then(response => setAnswers(response.data.answers))\n//             .catch(error => console.error('Error submitting quiz:', error));\n//     };\n\n//     return (\n//         <div>\n//             <h1>Quiz</h1>\n//             <input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 placeholder=\"Name\"\n//                 value={userInfo.name}\n//                 onChange={handleUserInfoChange}\n//             />\n//             <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"Email\"\n//                 value={userInfo.email}\n//                 onChange={handleUserInfoChange}\n//             />\n//             <div>\n//                 {quizData.map((question) => (\n//                     <div key={question.id}>\n//                         <p>{question.question}</p>\n//                         {question.options.map((option, index) => (\n//                             <div key={index}>\n//                                 <input\n//                                     type=\"radio\"\n//                                     id={`question-${question.id}-option-${index}`}\n//                                     name={`question-${question.id}`}\n//                                     value={option}\n//                                     onChange={(e) => handleChange(e, question.id)}\n//                                 />\n//                                 <label htmlFor={`question-${question.id}-option-${index}`}>{option}</label>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 ))}\n//             </div>\n//             <button onClick={handleSubmit}>Submit</button>\n//             {answers && (\n//                 <div>\n//                     <h2>Quiz Results</h2>\n//                     {answers.map((answer, index) => (\n//                         <div key={index}>\n//                             <p>Question: {answer.question}</p>\n//                             <p>Your Answer: {answer.userAnswer}</p>\n//                             <p>Correct Answer: {answer.correctAnswer}</p>\n//                             <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\n//                         </div>\n//                     ))}\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Quiz;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  topic\n}) => {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [userResponses, setUserResponses] = useState({});\n  const [answers, setAnswers] = useState(null);\n  const [userInfo, setUserInfo] = useState({\n    name: '',\n    email: ''\n  });\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/quiz/${topic}`).then(response => setQuizData(response.data.questions)).catch(error => console.error('Error fetching quiz data:', error));\n  }, [topic]);\n  const handleChange = (e, questionId) => {\n    setUserResponses({\n      ...userResponses,\n      [questionId]: e.target.value\n    });\n  };\n  const handleUserInfoChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserInfo(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = () => {\n    const responses = quizData.map(q => ({\n      question: q.question,\n      correctAnswer: q.answer,\n      userAnswer: userResponses[q._id] || ''\n    }));\n    const submissionData = {\n      userInfo,\n      topic,\n      responses\n    };\n    axios.post('http://localhost:5000/api/quiz/submit', submissionData).then(response => setAnswers(response.data.answers)).catch(error => console.error('Error submitting quiz:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Quiz on \", topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      value: userInfo.name,\n      onChange: handleUserInfoChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: userInfo.email,\n      onChange: handleUserInfoChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: quizData.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this), question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: `question-${question._id}-option-${index}`,\n            name: `question-${question._id}`,\n            value: option,\n            onChange: e => handleChange(e, question._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `question-${question._id}-option-${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this))]\n      }, question._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), answers && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question: \", answer.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Answer: \", answer.userAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct Answer: \", answer.correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: answer.isCorrect ? \"Correct\" : \"Incorrect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"4sShEgYnNLXjF4e3nMLYNkbIPGM=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Quiz","topic","_s","quizData","setQuizData","userResponses","setUserResponses","answers","setAnswers","userInfo","setUserInfo","name","email","get","then","response","data","questions","catch","error","console","handleChange","e","questionId","target","value","handleUserInfoChange","prevState","handleSubmit","responses","map","q","question","correctAnswer","answer","userAnswer","_id","submissionData","post","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","options","option","index","id","htmlFor","onClick","isCorrect","_c","$RefreshReg$"],"sources":["C:/Users/017975/Documents/Dashboard/frontend/src/Quiz.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Quiz = () => {\r\n//     const [quizData, setQuizData] = useState([]);\r\n//     const [userResponses, setUserResponses] = useState({});\r\n//     const [answers, setAnswers] = useState(null);\r\n//     const [userInfo, setUserInfo] = useState({ name: '', email: '' });\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:5000/api/quiz')\r\n//             .then(response => setQuizData(response.data))\r\n//             .catch(error => console.error('Error fetching quiz data:', error));\r\n//     }, []);\r\n\r\n//     const handleChange = (e, questionId) => {\r\n//         setUserResponses({\r\n//             ...userResponses,\r\n//             [questionId]: e.target.value,\r\n//         });\r\n//     };\r\n\r\n//     const handleUserInfoChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setUserInfo(prevState => ({ ...prevState, [name]: value }));\r\n//     };\r\n\r\n//     const handleSubmit = () => {\r\n//         const submissionData = {\r\n//             userInfo,\r\n//             responses: userResponses,\r\n//         };\r\n\r\n//         axios.post('http://localhost:5000/api/quiz/submit', submissionData)\r\n//             .then(response => setAnswers(response.data.answers))\r\n//             .catch(error => console.error('Error submitting quiz:', error));\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Quiz</h1>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 placeholder=\"Name\"\r\n//                 value={userInfo.name}\r\n//                 onChange={handleUserInfoChange}\r\n//             />\r\n//             <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 placeholder=\"Email\"\r\n//                 value={userInfo.email}\r\n//                 onChange={handleUserInfoChange}\r\n//             />\r\n//             <div>\r\n//                 {quizData.map((question) => (\r\n//                     <div key={question.id}>\r\n//                         <p>{question.question}</p>\r\n//                         {question.options.map((option, index) => (\r\n//                             <div key={index}>\r\n//                                 <input\r\n//                                     type=\"radio\"\r\n//                                     id={`question-${question.id}-option-${index}`}\r\n//                                     name={`question-${question.id}`}\r\n//                                     value={option}\r\n//                                     onChange={(e) => handleChange(e, question.id)}\r\n//                                 />\r\n//                                 <label htmlFor={`question-${question.id}-option-${index}`}>{option}</label>\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//             <button onClick={handleSubmit}>Submit</button>\r\n//             {answers && (\r\n//                 <div>\r\n//                     <h2>Quiz Results</h2>\r\n//                     {answers.map((answer, index) => (\r\n//                         <div key={index}>\r\n//                             <p>Question: {answer.question}</p>\r\n//                             <p>Your Answer: {answer.userAnswer}</p>\r\n//                             <p>Correct Answer: {answer.correctAnswer}</p>\r\n//                             <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Quiz;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Quiz = ({ topic }) => {\r\n    const [quizData, setQuizData] = useState([]);\r\n    const [userResponses, setUserResponses] = useState({});\r\n    const [answers, setAnswers] = useState(null);\r\n    const [userInfo, setUserInfo] = useState({ name: '', email: '' });\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/api/quiz/${topic}`)\r\n            .then(response => setQuizData(response.data.questions))\r\n            .catch(error => console.error('Error fetching quiz data:', error));\r\n    }, [topic]);\r\n\r\n    const handleChange = (e, questionId) => {\r\n        setUserResponses({\r\n            ...userResponses,\r\n            [questionId]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleUserInfoChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserInfo(prevState => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const responses = quizData.map((q) => ({\r\n            question: q.question,\r\n            correctAnswer: q.answer,\r\n            userAnswer: userResponses[q._id] || '',\r\n        }));\r\n\r\n        const submissionData = {\r\n            userInfo,\r\n            topic,\r\n            responses\r\n        };\r\n\r\n        axios.post('http://localhost:5000/api/quiz/submit', submissionData)\r\n            .then(response => setAnswers(response.data.answers))\r\n            .catch(error => console.error('Error submitting quiz:', error));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quiz on {topic}</h1>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                value={userInfo.name}\r\n                onChange={handleUserInfoChange}\r\n            />\r\n            <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                value={userInfo.email}\r\n                onChange={handleUserInfoChange}\r\n            />\r\n            <div>\r\n                {quizData.map((question) => (\r\n                    <div key={question._id}>\r\n                        <p>{question.question}</p>\r\n                        {question.options.map((option, index) => (\r\n                            <div key={index}>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id={`question-${question._id}-option-${index}`}\r\n                                    name={`question-${question._id}`}\r\n                                    value={option}\r\n                                    onChange={(e) => handleChange(e, question._id)}\r\n                                />\r\n                                <label htmlFor={`question-${question._id}-option-${index}`}>{option}</label>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            {answers && (\r\n                <div>\r\n                    <h2>Quiz Results</h2>\r\n                    {answers.map((answer, index) => (\r\n                        <div key={index}>\r\n                            <p>Question: {answer.question}</p>\r\n                            <p>Your Answer: {answer.userAnswer}</p>\r\n                            <p>Correct Answer: {answer.correctAnswer}</p>\r\n                            <p>{answer.isCorrect ? \"Correct\" : \"Incorrect\"}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}